// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3StopDepartureRequestRouteDirection v3 stop departure request route direction
// swagger:model V3.StopDepartureRequestRouteDirection
type V3StopDepartureRequestRouteDirection struct {

	// Direction of travel identifier; values returned by Directions API - v3/directions
	// Maximum: 2.147483647e+09
	// Minimum: 0
	DirectionID *int32 `json:"direction_id,omitempty"`

	// Name of direction of travel; values returned by Directions API - v3/directions
	// Required: true
	DirectionName *string `json:"direction_name"`

	// Identifier of route; values returned by Routes API - v3/routes
	RouteID string `json:"route_id,omitempty"`
}

// Validate validates this v3 stop departure request route direction
func (m *V3StopDepartureRequestRouteDirection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDirectionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirectionName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3StopDepartureRequestRouteDirection) validateDirectionID(formats strfmt.Registry) error {

	if swag.IsZero(m.DirectionID) { // not required
		return nil
	}

	if err := validate.MinimumInt("direction_id", "body", int64(*m.DirectionID), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("direction_id", "body", int64(*m.DirectionID), 2.147483647e+09, false); err != nil {
		return err
	}

	return nil
}

func (m *V3StopDepartureRequestRouteDirection) validateDirectionName(formats strfmt.Registry) error {

	if err := validate.Required("direction_name", "body", m.DirectionName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3StopDepartureRequestRouteDirection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3StopDepartureRequestRouteDirection) UnmarshalBinary(b []byte) error {
	var res V3StopDepartureRequestRouteDirection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
