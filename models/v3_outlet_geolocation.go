// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// V3OutletGeolocation v3 outlet geolocation
// swagger:model V3.OutletGeolocation
type V3OutletGeolocation struct {

	// The business name of the outlet
	OutletBusiness string `json:"outlet_business,omitempty"`

	// The business hours on Friday
	OutletBusinessHourFri string `json:"outlet_business_hour_fri,omitempty"`

	// The business hours on Monday
	OutletBusinessHourMon string `json:"outlet_business_hour_mon,omitempty"`

	// The business hours on Saturday
	OutletBusinessHourSat string `json:"outlet_business_hour_sat,omitempty"`

	// The business hours on Sunday
	OutletBusinessHourSun string `json:"outlet_business_hour_sun,omitempty"`

	// The business hours on Thursday
	OutletBusinessHourThur string `json:"outlet_business_hour_thur,omitempty"`

	// The business hours on Tuesday
	OutletBusinessHourTue string `json:"outlet_business_hour_tue,omitempty"`

	// The business hours on Wednesday
	OutletBusinessHourWed string `json:"outlet_business_hour_wed,omitempty"`

	// Distance of outlet from input location (in metres); returns 0 if no location is input
	OutletDistance float32 `json:"outlet_distance,omitempty"`

	// Geographic coordinate of latitude at outlet
	OutletLatitude float32 `json:"outlet_latitude,omitempty"`

	// Geographic coordinate of longitude at outlet
	OutletLongitude float32 `json:"outlet_longitude,omitempty"`

	// The location name of the outlet
	OutletName string `json:"outlet_name,omitempty"`

	// Any additional notes for the outlet such as 'Buy pre-loaded myki cards only'. May be null/empty.
	OutletNotes string `json:"outlet_notes,omitempty"`

	// The postcode for the outlet
	OutletPostcode int32 `json:"outlet_postcode,omitempty"`

	// The SLID / SPID
	OutletSlidSpid string `json:"outlet_slid_spid,omitempty"`

	// The city/municipality the outlet is in
	OutletSuburb string `json:"outlet_suburb,omitempty"`
}

// Validate validates this v3 outlet geolocation
func (m *V3OutletGeolocation) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V3OutletGeolocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3OutletGeolocation) UnmarshalBinary(b []byte) error {
	var res V3OutletGeolocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
